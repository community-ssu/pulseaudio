From 6f8bfe78d712db5c025e1f55aad1fe6f2574671e Mon Sep 17 00:00:00 2001
From: Jyri Sarha <jyri.sarha@nokia.com>
Date: Fri, 7 Nov 2008 16:39:42 +0200
Subject: [PATCH] alsa-old: only transfer full periods (Nokia specific)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Marc-Andr√© Lureau <marcandre.lureau@gmail.com>
---
 src/modules/module-alsa-sink-old.c   |   18 ++++++++++--------
 src/modules/module-alsa-source-old.c |   10 +++++++---
 2 files changed, 17 insertions(+), 11 deletions(-)

diff --git a/src/modules/module-alsa-sink-old.c b/src/modules/module-alsa-sink-old.c
index e752c12..9578dac 100644
--- a/src/modules/module-alsa-sink-old.c
+++ b/src/modules/module-alsa-sink-old.c
@@ -85,6 +85,7 @@ struct userdata {
     long hw_volume_max, hw_volume_min;
 
     size_t frame_size, fragment_size, hwbuf_size;
+    snd_pcm_uframes_t period_size;
     unsigned nfragments;
     pa_memchunk memchunk;
 
@@ -146,10 +147,10 @@ static int mmap_write(struct userdata *u) {
 
 /*         pa_log("Got request for %i samples", (int) n); */
 
-        if (n <= 0)
-            return work_done;
+        frames = n - (n % u->period_size);
 
-        frames = n;
+        if (frames <= 0)
+            return work_done;
 
         if ((err = snd_pcm_mmap_begin(u->pcm_handle, &areas, &offset, &frames)) < 0) {
 
@@ -241,6 +242,8 @@ static int unix_write(struct userdata *u) {
 
 /*         pa_log("%u bytes to write", l); */
 
+        l = l - (l % u->fragment_size);
+
         if (l <= 0)
             return work_done;
 
@@ -362,7 +365,6 @@ static int unsuspend(struct userdata *u) {
     int err;
     pa_bool_t b, d;
     unsigned nfrags;
-    snd_pcm_uframes_t period_size;
 
     pa_assert(u);
     pa_assert(!u->pcm_handle);
@@ -377,11 +379,10 @@ static int unsuspend(struct userdata *u) {
 
     ss = u->sink->sample_spec;
     nfrags = u->nfragments;
-    period_size = u->fragment_size / u->frame_size;
     b = u->use_mmap;
     d = FALSE;
 
-    if ((err = pa_alsa_set_hw_params(u->pcm_handle, &ss, &nfrags, &period_size, u->hwbuf_size / u->frame_size, &b, &d, TRUE)) < 0) {
+    if ((err = pa_alsa_set_hw_params(u->pcm_handle, &ss, &nfrags, &u->period_size, u->hwbuf_size / u->frame_size, &b, &d, TRUE)) < 0) {
         pa_log("Failed to set hardware parameters: %s", snd_strerror(err));
         goto fail;
     }
@@ -396,12 +397,12 @@ static int unsuspend(struct userdata *u) {
         goto fail;
     }
 
-    if (nfrags != u->nfragments || period_size*u->frame_size != u->fragment_size) {
+    if (nfrags != u->nfragments || u->period_size*u->frame_size != u->fragment_size) {
         pa_log_warn("Resume failed, couldn't restore original fragment settings.");
         goto fail;
     }
 
-    if ((err = pa_alsa_set_sw_params(u->pcm_handle, period_size)) < 0) {
+    if ((err = pa_alsa_set_sw_params(u->pcm_handle, u->period_size)) < 0) {
         pa_log("Failed to set software parameters: %s", snd_strerror(err));
         goto fail;
     }
@@ -906,6 +907,7 @@ int pa__init(pa_module*m) {
     u->fragment_size = frag_size = period_size * frame_size;
     u->nfragments = nfrags;
     u->hwbuf_size = u->fragment_size * nfrags;
+    u->period_size = period_size;
 
     pa_log_info("Using %u fragments of size %lu bytes.", nfrags, (long unsigned) u->fragment_size);
 
diff --git a/src/modules/module-alsa-source-old.c b/src/modules/module-alsa-source-old.c
index 7d7acbe..63850f2 100644
--- a/src/modules/module-alsa-source-old.c
+++ b/src/modules/module-alsa-source-old.c
@@ -86,6 +86,7 @@ struct userdata {
     long hw_volume_max, hw_volume_min;
 
     size_t frame_size, fragment_size, hwbuf_size;
+    snd_pcm_uframes_t period_size;
     unsigned nfragments;
 
     char *device_name;
@@ -142,10 +143,10 @@ static int mmap_read(struct userdata *u) {
 
 /*         pa_log("Got request for %i samples", (int) n); */
 
-        if (n <= 0)
-            return work_done;
+        frames = n - (n % u->period_size);
 
-        frames = n;
+        if (frames <= 0)
+            return work_done;
 
         if ((err = snd_pcm_mmap_begin(u->pcm_handle, &areas, &offset, &frames)) < 0) {
 
@@ -229,6 +230,8 @@ static int unix_read(struct userdata *u) {
 
         l = snd_pcm_status_get_avail(status) * u->frame_size;
 
+        l = l - (l % u->fragment_size);
+
         if (l <= 0)
             return work_done;
 
@@ -881,6 +884,7 @@ int pa__init(pa_module*m) {
     u->fragment_size = frag_size = period_size * frame_size;
     u->nfragments = nfrags;
     u->hwbuf_size = u->fragment_size * nfrags;
+    u->period_size = period_size;
 
     pa_log_info("Using %u fragments of size %lu bytes.", nfrags, (long unsigned) u->fragment_size);
 
-- 
1.6.0.2.514.g23abd3

