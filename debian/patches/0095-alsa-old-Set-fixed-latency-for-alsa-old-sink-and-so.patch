From 6cd90f8e8797cb09ac1ebfe912c8fe7150f9dae9 Mon Sep 17 00:00:00 2001
From: Jyri Sarha <jyri.sarha@nokia.com>
Date: Wed, 21 Oct 2009 12:06:05 +0300
Subject: [PATCH] alsa-old: Set fixed latency for alsa-old sink and source

---
 src/modules/alsa/module-alsa-sink-old.c   |    8 +++++++-
 src/modules/alsa/module-alsa-source-old.c |    9 ++++++++-
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/modules/alsa/module-alsa-sink-old.c b/src/modules/alsa/module-alsa-sink-old.c
index 8fe1770..132ce21 100644
--- a/src/modules/alsa/module-alsa-sink-old.c
+++ b/src/modules/alsa/module-alsa-sink-old.c
@@ -1064,6 +1064,7 @@ int pa__init(pa_module*m) {
     u->nfragments = nfrags;
     u->hwbuf_size = u->fragment_size * nfrags;
     u->period_size = period_size;
+    u->sink->fixed_latency = pa_bytes_to_usec(u->hwbuf_size, &u->sink->sample_spec);
 
     if (u->switching_enabled) {
         u->pri_frame_size = frame_size;
@@ -1077,9 +1078,14 @@ int pa__init(pa_module*m) {
         u->alt_nfragments = alt_nfrags;
         u->alt_hwbuf_size = u->alt_fragment_size * alt_nfrags;
         u->alt_period_size = alt_period_size;
+        /* If we'd like to be clever we could set this sink to have dynamic latency and set
+           max_latency = min_latency = bwbuf_size usec and call pa_sink_invalidate_requested_latency()
+           always when we do a buffer switch but there is no time, so let's assume the worst case and
+           be stupid instead. */
+        if (u->alt_hwbuf_size > u->hwbuf_size)
+            u->sink->fixed_latency = pa_bytes_to_usec(u->alt_hwbuf_size, &u->sink->sample_spec);
     }
 
-
     pa_log_info("PRI: Using %u fragments of size %lu bytes.", nfrags, (long unsigned) u->fragment_size);
     if (u->switching_enabled)
         pa_log_info("ALT: Using %u fragments of size %lu bytes.", alt_nfrags, (long unsigned) u->alt_fragment_size);
diff --git a/src/modules/alsa/module-alsa-source-old.c b/src/modules/alsa/module-alsa-source-old.c
index 8d9cbd2..6839c42 100644
--- a/src/modules/alsa/module-alsa-source-old.c
+++ b/src/modules/alsa/module-alsa-source-old.c
@@ -1380,6 +1380,7 @@ int pa__init(pa_module*m) {
     u->nfragments = nfrags;
     u->hwbuf_size = u->fragment_size * nfrags;
     u->period_size = period_size;
+    u->source->fixed_latency = pa_bytes_to_usec(u->hwbuf_size, &u->source->sample_spec);
 
     if (u->switching_enabled) {
         u->pri_frame_size = frame_size;
@@ -1393,7 +1394,13 @@ int pa__init(pa_module*m) {
         u->alt_nfragments = alt_nfrags;
         u->alt_hwbuf_size = u->alt_fragment_size * alt_nfrags;
         u->alt_period_size = alt_period_size;
-    }
+        /* If we'd like to be clever we could set this sink to have dynamic latency and set
+           max_latency = min_latency = bwbuf_size usec and call pa_sink_invalidate_requested_latency()
+           always when we do a buffer switch but there is no time, so let's assume the worst case and
+           be stupid instead. */
+        if (u->alt_hwbuf_size > u->hwbuf_size)
+            u->source->fixed_latency = pa_bytes_to_usec(u->alt_hwbuf_size, &u->source->sample_spec);
+      }
 
     pa_log_info("PRI: Using %u fragments of size %lu bytes.", nfrags, (long unsigned) u->fragment_size);
     if (u->switching_enabled)
-- 
1.5.6.3

