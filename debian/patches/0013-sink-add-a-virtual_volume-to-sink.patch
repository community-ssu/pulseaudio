From 79f9d64c46924661a75aaf16370b75972c6d5d2c Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@gmail.com>
Date: Mon, 10 Nov 2008 16:59:09 +0200
Subject: [PATCH] sink: add a virtual_volume to sink

---
 src/pulsecore/sink.c |   17 +++++++++--------
 src/pulsecore/sink.h |    2 ++
 2 files changed, 11 insertions(+), 8 deletions(-)

diff --git a/src/pulsecore/sink.c b/src/pulsecore/sink.c
index 220271e..f92308d 100644
--- a/src/pulsecore/sink.c
+++ b/src/pulsecore/sink.c
@@ -190,7 +190,7 @@ pa_sink* pa_sink_new(
     s->inputs = pa_idxset_new(NULL, NULL);
     s->n_corked = 0;
 
-    s->volume = data->volume;
+    s->virtual_volume = s->volume = data->volume;
     s->muted = data->muted;
     s->refresh_volume = s->refresh_muted = FALSE;
 
@@ -852,24 +852,25 @@ void pa_sink_set_volume(pa_sink *s, const pa_cvolume *volume) {
     pa_assert(pa_cvolume_compatible(volume, &s->sample_spec));
 
     data.sink = s;
-    data.volume = *volume;
+    data.virtual_volume = data.volume = *volume;
 
-    changed = !pa_cvolume_equal(&data.volume, &s->volume);
+    changed = !pa_cvolume_equal(&data.virtual_volume, &s->virtual_volume);
 
     if (changed) {
         if (pa_hook_fire(&s->core->hooks[PA_CORE_HOOK_SINK_SET_VOLUME], &data) < 0)
             return;
 
-        changed = !pa_cvolume_equal(&data.volume, &s->volume);
+        changed = !pa_cvolume_equal(&data.virtual_volume, &s->virtual_volume);
     }
 
     s->volume = data.volume;
+    s->virtual_volume = data.virtual_volume;
 
     if (s->set_volume && s->set_volume(s) < 0)
         s->set_volume = NULL;
 
     if (!s->set_volume)
-        pa_sink_set_soft_volume(s, volume);
+        pa_sink_set_soft_volume(s, &s->volume);
 
     if (changed)
         pa_subscription_post(s->core, PA_SUBSCRIPTION_EVENT_SINK|PA_SUBSCRIPTION_EVENT_CHANGE, s->index);
@@ -892,7 +893,7 @@ const pa_cvolume *pa_sink_get_volume(pa_sink *s, pa_bool_t force_refresh) {
     pa_assert(PA_SINK_IS_LINKED(s->state));
 
     if (s->refresh_volume || force_refresh) {
-        struct pa_cvolume old_volume = s->volume;
+        struct pa_cvolume old_volume = s->virtual_volume;
 
         if (s->get_volume && s->get_volume(s) < 0)
             s->get_volume = NULL;
@@ -900,11 +901,11 @@ const pa_cvolume *pa_sink_get_volume(pa_sink *s, pa_bool_t force_refresh) {
         if (!s->get_volume)
             pa_asyncmsgq_send(s->asyncmsgq, PA_MSGOBJECT(s), PA_SINK_MESSAGE_GET_VOLUME, &s->volume, 0, NULL);
 
-        if (!pa_cvolume_equal(&old_volume, &s->volume))
+        if (!pa_cvolume_equal(&old_volume, &s->virtual_volume))
             pa_subscription_post(s->core, PA_SUBSCRIPTION_EVENT_SINK|PA_SUBSCRIPTION_EVENT_CHANGE, s->index);
     }
 
-    return &s->volume;
+    return &s->virtual_volume;
 }
 
 /* Called from main thread */
diff --git a/src/pulsecore/sink.h b/src/pulsecore/sink.h
index 9d594f3..c5cdc33 100644
--- a/src/pulsecore/sink.h
+++ b/src/pulsecore/sink.h
@@ -79,6 +79,7 @@ struct pa_sink {
     pa_source *monitor_source;
 
     pa_cvolume volume;
+    pa_cvolume virtual_volume;
     pa_bool_t muted;
 
     pa_bool_t refresh_volume:1;
@@ -209,6 +210,7 @@ void pa_sink_new_data_done(pa_sink_new_data *data);
 typedef struct pa_sink_set_volume_data {
   pa_sink *sink;
   pa_cvolume volume;
+  pa_cvolume virtual_volume;
 } pa_sink_set_volume_data;
 
 /* To be called exclusively by the sink driver, from main context */
-- 
1.6.0.2.514.g23abd3

