From 79c0c04ac3c31322448a3fa279f6380da1579cc7 Mon Sep 17 00:00:00 2001
From: Tanu Kaskinen <tanu.kaskinen@digia.com>
Date: Tue, 6 Oct 2009 10:36:00 +0300
Subject: [PATCH] combine: Handle PA_SINK_MESSAGE_GET_UNDERRUN messages.

---
 src/modules/module-combine.c |   18 ++++++++++++++++++
 1 files changed, 18 insertions(+), 0 deletions(-)

diff --git a/src/modules/module-combine.c b/src/modules/module-combine.c
index caaeb88..cdb98cf 100644
--- a/src/modules/module-combine.c
+++ b/src/modules/module-combine.c
@@ -72,6 +72,9 @@ PA_MODULE_USAGE(
 
 #define BLOCK_USEC (PA_USEC_PER_MSEC * 200)
 
+/* FIXME: This shared constant should be defined in some header file. */
+#define PA_SINK_MESSAGE_GET_UNDERRUN (PA_SINK_MESSAGE_MAX + 50)
+
 static const char* const valid_modargs[] = {
     "sink_name",
     "slaves",
@@ -682,6 +685,21 @@ static int sink_process_msg(pa_msgobject *o, int code, void *data, int64_t offse
             return 0;
         }
 
+        case PA_SINK_MESSAGE_GET_UNDERRUN: {
+            struct output *op = NULL;
+            pa_bool_t underrun = FALSE;
+
+            *((pa_bool_t *) data) = FALSE;
+
+            PA_LLIST_FOREACH(op, u->thread_info.active_outputs) {
+                PA_MSGOBJECT(op->sink)->process_msg(
+                        PA_MSGOBJECT(op->sink), PA_SINK_MESSAGE_GET_UNDERRUN, &underrun, (int64_t)0, NULL);
+                *((pa_bool_t *) data) |= underrun;
+            }
+
+            return 0;
+        }
+
         case SINK_MESSAGE_ADD_OUTPUT: {
             struct output *op = data;
 
-- 
1.6.0.4

