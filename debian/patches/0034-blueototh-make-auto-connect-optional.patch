From 98b5f6f3cb6867821d73a972a2f430f026f738f5 Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Marc-Andr=C3=A9=20Lureau?= <marcandre.lureau@gmail.com>
Date: Wed, 13 May 2009 22:46:50 +0300
Subject: [PATCH 34/57] blueototh: make auto-connect optional

---
 src/modules/bluetooth/module-bluetooth-device.c |   19 ++++++++++++++++++-
 1 files changed, 18 insertions(+), 1 deletions(-)

diff --git a/src/modules/bluetooth/module-bluetooth-device.c b/src/modules/bluetooth/module-bluetooth-device.c
index 74c066f..53a8028 100644
--- a/src/modules/bluetooth/module-bluetooth-device.c
+++ b/src/modules/bluetooth/module-bluetooth-device.c
@@ -73,6 +73,12 @@ PA_MODULE_USAGE(
         "path=<device object path>");
 
 /*
+  This is not a user friendly option, jhe couldn't come up with a good
+  reason why it should be configurable. Commenting for now.
+        "auto_connect=<attempt to connect if profile is disconnected?>"
+*/
+
+/*
 #ifdef NOKIA
         "sco_sink=<SCO over PCM sink name> "
         "sco_source=<SCO over PCM source name>"
@@ -91,6 +97,7 @@ static const char* const valid_modargs[] = {
     "rate",
     "channels",
     "path",
+    "auto_connect",
 #ifdef NOKIA
     "sco_sink",
     "sco_source",
@@ -168,6 +175,8 @@ struct userdata {
 
     int stream_write_type;
     int service_write_type, service_read_type;
+
+    pa_bool_t auto_connect;
 };
 
 #define FIXED_LATENCY_PLAYBACK_A2DP (25*PA_USEC_PER_MSEC)
@@ -367,7 +376,9 @@ static int get_caps(struct userdata *u, uint8_t seid) {
         pa_assert(u->profile == PROFILE_HSP);
         msg.getcaps_req.transport = BT_CAPABILITIES_TRANSPORT_SCO;
     }
-    msg.getcaps_req.flags = BT_FLAG_AUTOCONNECT;
+
+    if (u->auto_connect)
+        msg.getcaps_req.flags = BT_FLAG_AUTOCONNECT;
 
     if (service_send(u, &msg.getcaps_req.h) < 0)
         return -1;
@@ -2160,6 +2171,12 @@ int pa__init(pa_module* m) {
     u->sample_spec.channels = (uint8_t) channels;
     u->requested_sample_spec = u->sample_spec;
 
+    u->auto_connect = FALSE;
+    if (pa_modargs_get_value_boolean(ma, "auto_connect", &u->auto_connect) < 0) {
+        pa_log_error("Failed to get auto_connect from module arguments");
+        goto fail;
+    }
+
     address = pa_modargs_get_value(ma, "address", NULL);
     path = pa_modargs_get_value(ma, "path", NULL);
 
-- 
1.6.3.1

